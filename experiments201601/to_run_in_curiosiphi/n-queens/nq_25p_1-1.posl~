St_b001 := cStrategy
        oModule: OM_S, OM_V, OM_SS1, OM_SS2, OM_D;
{
<S>
    OP.Cyc ( BE.LoopBnd 5 )
    <S>
        OP.|->
        OM_S
        <S>
            OP.Cyc ( BE.LoopBnd 20000 )
            <S>
                OP.|->
                <S>
                    OP.|->
                    <S>
                        OP.|->
                        <S>
                            OP.|->
                            OM_V
                            <S>
                                OP.? ( BE.SCI 5 )
                                OM_SS1
                                OM_SS2
                            </S>
                        </S>
                        OM_D
                    </S> OMS.IterCounter
                </S> OMS.TimeCounter
            </S>
        </S>
    </S>
</S>
};

St_sb001 := cStrategy
        oModule: OM_S, OM_V, OM_SS1, OM_SS2, OM_D;
{
<S>
    OP.Cyc ( BE.LoopBnd 5 )
    <S>
        OP.|->
        OM_S
        <S>
            OP.Cyc ( BE.LoopBnd 20000 )
            <S>
                OP.|->
                <S>
                    OP.|->
                    <S>
                        OP.|->
                        <S>
                            OP.|->
                            OM_V
                            <S>
                                OP.? ( BE.SCI 5 )
                                <S> OP.OSend (send1) OM_SS1 </S> //<S> OP.? (BE.LoopBnd 4) OM_SS1 <S> OP.OSend (send1) OM_SS1 </S> </S>
                                OM_SS2
                            </S>
                        </S>
                        OM_D
                    </S> OMS.IterCounter
                </S> OMS.TimeCounter
            </S>
        </S>
    </S>
</S>
};

St_rb001 := cStrategy
    oModule: OM_S, OM_V, OM_SS1, OM_SS2, OM_D;
    oChannel: OCh;
{
<S>
    OP.Cyc ( BE.LoopBnd 5 )
    <S>
        OP.|->
        OM_S
        <S>
            OP.Cyc ( BE.LoopBnd 20000 )
            <S>
                OP.|->
                <S>
                    OP.|->
                    <S>
                        OP.|->
                        <S>
                            OP.|->
                            OM_V
                            <S>
                                OP.? ( BE.SCI 5 )
                                <S> OP.? (BE.LoopBnd 10) OM_SS1 <S> OP.Min OM_SS1 OCh (Ch1) </S> </S>
                                OM_SS2
                            </S>
                        </S>
                        OM_D
                    </S> OMS.IterCounter
                </S> OMS.TimeCounter
            </S>
        </S>
    </S>
</S>
};

single_solver := solver
{
    cStrategy: St_b001;
    oModule: OM_S.PermRand, OM_V.AS, OM_SS.FirstImpr, OM_SS.Rand, OM_D.AlwImpr;
};

receiver_solver := solver
{
    cStrategy: St_rb001;
    oModule: OM_S.PermRand, OM_V.AS, OM_SS.FirstImpr, OM_SS.Rand, OM_D.AlwImpr;
    oChannel: OCh.DP_Last;
};

sender_solver := solver
{
    cStrategy: St_sb001;
    oModule: OM_S.PermRand, OM_V.AS, OM_SS.FirstImpr, OM_SS.Rand, OM_D.AlwImpr;
};

connections:

[sender_solver.send1] OP.--> [receiver_solver.Ch1]5;
[single_solver]30;

